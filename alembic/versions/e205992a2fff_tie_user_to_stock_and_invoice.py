"""tie user to stock and invoice

Revision ID: e205992a2fff
Revises: 94d28d5eb4fe
Create Date: 2021-05-14 22:42:22.314653

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e205992a2fff'
down_revision = '94d28d5eb4fe'
branch_labels = None
depends_on = None


def upgrade():
    op.create_unique_constraint(None, 'category', ['uuid'])
    op.create_unique_constraint(None, 'customer', ['uuid'])
    op.add_column('invoice', sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.alter_column('invoice', 'product_uuid',
                    existing_type=postgresql.UUID(),
                    nullable=False)
    op.alter_column('invoice', 'customer_uuid',
                    existing_type=postgresql.UUID(),
                    nullable=False)
    op.create_unique_constraint(None, 'invoice', ['uuid'])
    op.create_foreign_key(None, 'invoice', 'user', ['user_uuid'], ['uuid'])
    op.create_unique_constraint(None, 'permision_template', ['uuid'])
    op.create_unique_constraint(None, 'product', ['uuid'])
    op.create_unique_constraint(None, 'product_providers', ['uuid'])
    op.create_unique_constraint(None, 'product_template', ['uuid'])
    op.create_unique_constraint(None, 'provider', ['uuid'])
    op.create_unique_constraint(None, 'role', ['uuid'])
    op.add_column('stock', sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.alter_column('stock', 'product_uuid',
                    existing_type=postgresql.UUID(),
                    nullable=False)
    op.create_unique_constraint(None, 'stock', ['uuid'])
    op.create_foreign_key(None, 'stock', 'user', ['user_uuid'], ['uuid'])
    op.create_unique_constraint(None, 'tenant', ['uuid'])
    op.create_unique_constraint(None, 'user', ['uuid'])
    op.create_unique_constraint(None, 'user_roles_by_tenant', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_roles_by_tenant', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'tenant', type_='unique')
    op.drop_constraint(None, 'stock', type_='foreignkey')
    op.drop_constraint(None, 'stock', type_='unique')
    op.alter_column('stock', 'product_uuid',
                    existing_type=postgresql.UUID(),
                    nullable=True)
    op.drop_column('stock', 'user_uuid')
    op.drop_constraint(None, 'role', type_='unique')
    op.drop_constraint(None, 'provider', type_='unique')
    op.drop_constraint(None, 'product_template', type_='unique')
    op.drop_constraint(None, 'product_providers', type_='unique')
    op.drop_constraint(None, 'product', type_='unique')
    op.drop_constraint(None, 'permision_template', type_='unique')
    op.drop_constraint(None, 'invoice', type_='foreignkey')
    op.drop_constraint(None, 'invoice', type_='unique')
    op.alter_column('invoice', 'customer_uuid',
                    existing_type=postgresql.UUID(),
                    nullable=True)
    op.alter_column('invoice', 'product_uuid',
                    existing_type=postgresql.UUID(),
                    nullable=True)
    op.drop_column('invoice', 'user_uuid_uuid')
    op.drop_constraint(None, 'customer', type_='unique')
    op.drop_constraint(None, 'category', type_='unique')
    # ### end Alembic commands ###
